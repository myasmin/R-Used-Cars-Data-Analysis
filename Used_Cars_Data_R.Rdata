rm(list=ls())
setwd("D:/Projects/R/Used Cars Data Analysis")
library(tidyverse)
library(plotly)
require(forcats)

######################## Import Data from CSV file ########################

vehicle <- read_csv("D:/Projects/R/Used Cars Data Analysis/vehicles.csv")
head(vehicle)
colnames(vehicle)
summary(vehicle)


rawdata <-vehicle %>%
  select(-c(url , region_url, title_status,VIN, image_url, description, posting_date))

####### EDA of All Variables 

cutoffpoint <- boxplot.stats(vehicle$price)$out %>%
  min()
cutoffpoint

cleandata_price <- vehicle %>%
  select(-c(url , region_url, title_status,VIN, image_url, description, posting_date))%>%
  filter (price != 0 & !is.na(price) & price <= cutoffpoint)

count(cleandata_price)/count(vehicle)

head(cleandata_price)
names(cleandata_price)
summary(cleandata_price)

boxplot(cleandata_price$price)

priceboxplot <- ggplot(data=cleandata_price, aes(y=price)) +
  geom_boxplot(outlier.colour = "blue", outlier.shape = 1)

ggplotly(priceboxplot)
summary(priceboxplot)


qplot(cleandata_price$price)
ggplot(data=cleandata_price, aes(x=price)) +
  geom_histogram(binwidth =1000) 


# Trading comparison by manufacturer

manudata<-vehicle %>%
  select(-c(url , region_url, title_status,VIN, image_url, description, posting_date))%>%
  drop_na(manufacturer) %>% 
  ggplot()+
  geom_bar(aes(x=fct_infreq(manufacturer)),stat ="count")+
  coord_flip()

ggplotly(manudata)

# Comparison of Price by manufacturer

price_manu<- cleandata_price %>%
  drop_na(manufacturer) %>% 
  group_by(manufacturer) %>% 
  filter(n() >= 2000 )

pm <-ggplot(data=price_manu,mapping=aes(x=price, colour = manufacturer, fill = manufacturer)) + 
  geom_histogram(aes(y=..density..), alpha=0.5,position="identity")+
  geom_density(alpha=.2)
pm + facet_wrap(manufacturer ~ .)


# Trading by state

cars_state <- rawdata %>% 
  mutate(state = str_sub(region,-2,-1)) %>%
  group_by(state) %>%
  ggplot() +
  geom_bar(aes(x=fct_infreq(state)),stat ="count")

ggplotly(cars_state)


# Trading considering cylinders
rawdata %>% 
  drop_na(cylinders) %>% 
  group_by(cylinders) %>%
  ggplot() +
  geom_bar(aes(x=fct_infreq(cylinders)),stat ="count")


# Trading considering fuel
rawdata %>% 
  drop_na(fuel) %>% 
  group_by(fuel) %>%
  ggplot() +
  geom_bar(aes(x=fct_infreq(fuel)),stat ="count")

# Trading considering odometer
cleandata_price %>% 
  drop_na(odometer) %>% 
  ggplot(aes(x=odometer,y=price)) +
  geom_boxplot()

# Trading considering transmission
rawdata %>% 
  drop_na(transmission) %>% 
  group_by(transmission) %>%
  ggplot() +
  geom_bar(aes(x=fct_infreq(transmission)),stat ="count")

# Trading considering drive
rawdata %>% 
  drop_na(drive) %>% 
  group_by(drive) %>%
  ggplot() +
  geom_bar(aes(x=fct_infreq(drive)),stat ="count")

# Trading considering size
rawdata %>% 
  drop_na(size) %>% 
  group_by(size) %>%
  ggplot() +
  geom_bar(aes(x=fct_infreq(size)),stat ="count")

# Trading considering type
rawdata %>% 
  drop_na(type) %>% 
  group_by(type) %>%
  ggplot() +
  geom_bar(aes(x=fct_infreq(type)),stat ="count")

# Trading considering Paint Colour
rawdata %>% 
  drop_na(paint_color) %>% 
  group_by(paint_color) %>%
  ggplot() +
  geom_bar(aes(x=fct_infreq(paint_color)),stat ="count")




# Model development 
cleandata_model<-lm(data=cleandata_price, price ~ state + manufacturer + condition + cylinders+ fuel+ odometer+ transmission+ drive + size + type + paint_color)
head(fortify(cleandata_model))
plot(cleandata_model)
summary(cleandata_model)
dev.off()
##################################################################################


# # Trading considering the lat and long
# 
# 
# vehiclemap<-map_data('state')
# 
#   ggplot()+
#   geom_polygon(data=vehiclemap,aes(x=long, y=lat, group = group),color="white", fill="grey28")+
#   geom_point(data=rawdata, aes(x=long,y=lat),alpha = .5)
# 
# # 

library(GGally)









# finaldata %>% 
#   group_by(manufacturer) %>%
#   summarise(Count = n()) %>%
#   ggplot(aes(reorder(manufacturer, Count),count)) +
#   geom_bar(stat = "identity") + 
#   coord_flip()

finaldata %>% 
  group_by(manufacturer) %>%
  #   summarise(Count = n())
  
  
  
  
  # hist(mydata$price)
  # boxplot(mydata$price)
  # findout<- boxplot.stats(mydata$price)
  # min(findout$out)
  
  ## the majority trading is below 38905 USD, so we focus our interest on the trading dataset that are below 38905 USD ##
#mydata2<- mydata %>% 
#  filter(mydata$price is.na & mydata$price != 0 )

# mydata3<- mydata %>%
#                  filter(mydata$price <38905 & mydata$price != 0 )
# boxplot(mydata3$price)
# hist(mydata3$price,breaks= 500)
# nrow(mydata3)/nrow(mydata)*100

## our dataset in consideration will be the mydata3 dataset ##

##to be continued



